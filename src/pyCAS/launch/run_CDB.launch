<?xml version="1.0" ?>
<launch>
  <!-- Arguments -->
  <arg name="map_file" default="$(find pyCAS)/domains/CDB_robot/maps/campus_2.yaml" />
  <arg name="model" default="burger"/>
  <arg name="move_forward_only" default="true"/>
  <!-- pyCAS arguments -->
  <arg name="obstacle_map" default="$(find pyCAS)/domains/CDB_robot/maps/obstacle_info.json"/>
  <arg name="grid_map" default="$(find pyCAS)/domains/CDB_robot/maps/campus_2.txt"/>
  <arg name="topological_map" default="$(find pyCAS)/domains/CDB_robot/maps/map_info.json" />
  <!-- gazebo arguments -->
  <!-- <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="2.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="4.71"/>
  <arg name="world" default="$(find pyCAS)/gazebo/worlds/large_campus.world"/> -->

  <!-- pyCAS execution node-->
  <node pkg="pyCAS" type="CDB_execution_node.py" name="CDB_execution_node" output="screen">
    <param name="wait_duration" value="1" />
    <param name="timeout_duration" value="1000" />
    <param name="number_iterations" value="50" />
    <param name="obstacle_map" value="$(arg obstacle_map)" />
    <param name="grid_map" value="$(arg grid_map)" />
    <param name="topological_map" value="$(arg topological_map)" />
  </node>

  <!-- pyCAS monitor nodes -->
  <node pkg="pyCAS" type="robot_status_monitor.py" name="robot_status_monitor" output="screen">
    <param name="rate" value="10" />
  </node>

  <node pkg="pyCAS" type="obstacle_monitor.py" name="obstacle_monitor" output="screen">
    <param name="rate" value="10" />
  </node>

  <node pkg="pyCAS" type="ssp_state_monitor.py" name="ssp_state_monitor" output="screen">
    <param name="rate" value="10" />
  </node>

  <param name="tb3_model" value="burger"/>

  <!-- gazebo_ros launcher -->
  <!--include file="$(find gazebo_ros)/launch/empty_world.launch">
          <arg name="world_name" value= "$(arg world)" />
          <arg name="debug" value="false" />
          <arg name="gui" value="true" />
          <arg name="paused" value="false" />
          <arg name="use_sim_time" value="true" />
          <arg name="headless" value="false"/>
  </include-->

  <!-- turtlebot 3-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  
  <!--node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description" /-->

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- AMCL localization -->
  <!-- <include file="$(find turtlebot3_navigation)/launch/amcl.launch">
    <arg name="initial_pose_x" value="-0.5"/>
    <arg name="initial_pose_y" value="-2.4"/>
    <arg name="initial_pose_a" value="4.71"/>
  </include> -->

  <!--fake localization -->
  <node pkg="fake_localization" type="fake_localization" name="fake_localization">
    <remap from="base_pose_ground_truth" to="odom" />
    <param name="delta_x" value="0.5"/>
    <param name="delta_y" value="2.4"/>
    <param name="delta_yaw" value="-4.7"/>
  </node>

  <!-- <node pkg="tf" type="static_transform_publisher" name="laser_to_baselink" args="0 0 0 3.14159 0 0 /laser /base_link 50"/> -->

  <!-- visualization and mapping -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find pyCAS)/rviz/default.rviz" />
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- move_base planner -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_burger.yaml" command="load" />
    <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
    <param name="recovery_behavior_enabled" value="false"/> 
    <param name="clearing_rotation_allowed" value="false"/>
  </include>
</launch>
